openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /api/clients:
    get:
      tags:
        - Clients
      summary: Find all clients
      operationId: findClients
      parameters:
        - name: offset
          in: query
          required: true
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: limit
          in: query
          required: true
          schema:
            maximum: 50
            minimum: 1
            type: integer
            format: int32
      responses:
        "400":
          description: Bad Request
          content: {}
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
    post:
      tags:
        - Clients
      summary: Add new client
      operationId: addClient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientDto'
        required: true
      responses:
        "400":
          description: Bad Request
          content: {}
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientDto'
  /api/clients/{id}/contacts:
    get:
      tags:
        - Clients
      summary: Find contacts of client
      operationId: findClientContacts
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: type
          in: query
          required: false
          schema:
            type: string
      responses:
        "400":
          description: Bad Request
          content: {}
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactDto'
        "404":
          description: Not Found
    post:
      tags:
        - Clients
      summary: Add new contact for client
      operationId: addContact
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactDto'
        required: true
      responses:
        "400":
          description: Bad Request
          content: {}
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactDto'
        "404":
          description: Not Found
  /api/clients/{id}:
    get:
      tags:
        - Clients
      summary: Find client by ID
      operationId: findClient
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "400":
          description: Bad Request
          content: {}
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientWithContactsDto'
        "404":
          description: Not Found
components:
  schemas:
    ClientDto:
      required:
        - firstName
      type: object
      properties:
        clientId:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
    ContactDto:
      required:
        - contactType
        - value
      type: object
      properties:
        contactId:
          type: integer
          format: int64
        contactType:
          type: string
        value:
          type: string
    Page:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            type: object
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/SortObject'
        paged:
          type: boolean
        unpaged:
          type: boolean
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
    SortObject:
      type: object
      properties:
        empty:
          type: boolean
        unsorted:
          type: boolean
        sorted:
          type: boolean
    ClientWithContactsDto:
      type: object
      properties:
        clientId:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ContactDto'